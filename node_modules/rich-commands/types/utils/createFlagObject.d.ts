import { CommandFlag, CommandFlags } from "../types/types";
/**
 * Options for creating a flag object.
 */
export interface FlagObjectOptions {
    /**
     * If true, multiple flags with the same name will be merged into an array flag with all the values.
     * Otherwise, only the first flag with that name will be used.
     */
    allowArrayValues: boolean;
    /**
     * Whether flags names & flag object keys are case insensitive.
     * @example
     * const flagObject = createFlagObject([
     *  { name: 'SampleFlag', value: '1' },
     *  { name: 'sampleflag', value: '2' }
     * ], {
     *  allowArrayValues: true,
     *  caseInsensitiveFlags: true
     * });
     *
     * const sampleFlag = flagObject.sampleFlag; // [ '1', '2' ]
     */
    caseInsensitiveFlags: boolean;
}
/**
 * Creates the flag object from raw command flags.
 * @param flags Raw command flags.
 * @param options Flag object options.
 * Flag object options override the {@link defaultFlagObjectOptions default ones},
 * if you want to disable a flag object option then you should explicitly set it to undefined.
 */
export declare function createFlagObject(flags: CommandFlag[], options?: Partial<FlagObjectOptions>): CommandFlags;
